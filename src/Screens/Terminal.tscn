[gd_scene load_steps=4 format=2]

[ext_resource path="res://Assets/LivingRoom.jpg" type="Texture" id=1]
[ext_resource path="res://src/default_font_48.tres" type="DynamicFont" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Control

onready var prompt : LineEdit = $CommandPrompt

# export var commands : PoolStringArray

func _init():
	Input.set_mouse_mode(Input.MOUSE_MODE_HIDDEN)

func _ready():
	prompt.grab_focus()

func _on_CommandPrompt_text_entered(new_text : String):
	prompt.clear() # Clear the text entry
	var user_input := new_text.to_lower().split(\" \") #Seperate input
	# If the input is too big, notify user.
	if !(user_input.size() > 2):
		parse_commands(user_input)
	else:
		print(\"One or two words only.\")

func parse_commands(commands : PoolStringArray):
	match commands[0]:
		\"shutdown\", \"sd\": # Shutdown game
			 shutdown()
		
		\"travel\": # Travel somewhere
			if commands.size() == 1:
				print(\"Please also type your destination.\")
				prompt.append_at_cursor(\"travel \")
			else:
			 travel(commands[1])
		_:
			print(\"Invalid command.\")


### Commands ###

func shutdown():
	get_tree().quit()

func travel(destination : String):
	print(\"You traveled to \" + destination)

func talk(character : String):
	print(\"You talked to \" + character)
	pass

func get(item : String):
	# Check if has money
	print (\"You got \" + item)
	pass

func work():
	# You worked at 'current location'
	pass
	
"

[node name="Terminal" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
modulate = Color( 0, 0, 0, 1 )
margin_right = 40.0
margin_bottom = 40.0
texture = ExtResource( 1 )

[node name="CommandPrompt" type="LineEdit" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 384.0
margin_top = -58.0
margin_right = -384.0
custom_fonts/font = ExtResource( 2 )
max_length = 20
context_menu_enabled = false
placeholder_text = "Enter command..."
caret_blink = true
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="text_entered" from="CommandPrompt" to="." method="_on_CommandPrompt_text_entered"]
